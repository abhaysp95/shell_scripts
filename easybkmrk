#!/bin/bash

# TODO: update so that, script knows it's run from tty and output there,
# instead of notification

local_db="$HOME/.cache/temp/bkmrkdb.csv"

# get the s.no.
function get_sno() {
	local count=0
	if [ -f "${local_db}" ]; then
		count=$(tail -1 "${local_db}" | cut -d, -f1)
		count=$(( count + 1 ))
	fi

	echo "${count}"
}

function bkmrkToDB() {
	local url=$(xclip -o)

	if [ -z "${url}" ]; then
		dunstify -a "easyBookmark" \
			--icon="~/.cache/notify-icons/bookmark.png" \
			"Easy Bookmark" "Nothing to bookmark"
		exit 0
	fi

	# get serial no.
	local count=$(get_sno)

	# echo "got url: ${url}"
	echo "${count},${url}," 1>> "${local_db}"

	dunstify -a "easyBookmark" \
		--icon="~/.cache/notify-icons/bookmark-check.png" \
		"URL bookmarked" "${url}"
}

function titleDialog() {
	local url=$(xclip -o)
	# echo "got url: ${url}"

	if [ -z "${url}" ]; then
		dunstify -a "easyBookmark" \
			--icon="~/.cache/notify-icons/bookmark.png" \
			"Easy Bookmark" "Nothing to bookmark"
		exit 0
	fi

	# get serial no.
	local count=$(get_sno)

	title="$(zenity --entry \
		--text="Enter bookmark title")"

	echo "${count},${url},${title}" >> "${local_db}"

	dunstify -a "easyBookmark" \
		--icon="~/.cache/notify-icons/bookmark-check.png" \
		"URL bookmarked" "${url}\n<b>Title:</b>${title}"
}

function getBkmrk() {
	local res_bkmrk="$(cat "${local_db}" \
		| dmenu -p "Bookmark: " -l 20 -c -i \
		| cut -d, -f2)"
	echo "${res_bkmrk}" \
		| xclip -selection clipboard

	if [ -z "${res_bkmrk}" ]; then
		res_bkmrk="You've not selected any bookmark"
		dunstify -a "easyBookmark" \
			--icon="~/.cache/notify-icons/bookmark.png" \
			"Bookmark not copied" "${res_bkmrk}"
		return
	fi

	dunstify -a "easyBookmark" \
		--icon="~/.cache/notify-icons/bookmark-star.png" \
		"Bookmark Copied" "${res_bkmrk}"
}

case "$1" in
	"") bkmrkToDB ;;
	"--title") titleDialog ;;
	"--get") getBkmrk ;;
	"-h") echo "Will update help later" ;;
	*) echo "only \"--title\" flag supported" ;;
esac
