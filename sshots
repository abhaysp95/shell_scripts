#!/usr/bin/env sh

function get_help() {
	# write help here
}

quality=100
sshots_dir="${HOME}/Pictures/Screenshots/$(date +"%Y-%m")"
sshots_file="${sshots_dir}/$(date +"%Y-%m-%d_%H%M%S").png"
background_frame_color="#abb2bf"
delay_time="5"

function post_operation() {
	message="$(printf "${stype} type\nScreenshot Captured")"
	img="$(readlink -f "${sshots_file}")"
	notify-send --icon="${img}" -t 3000 "${message}"
}

function check_dir() {
	if [ ! -d "${sshots_dir}" ]; then
		mkdir -p "${sshots_dir}"
	fi
}

function full_sshot() {
	check_dir
	stype="Full"
	maim -u -f png | convert - \
		\( +clone -background black -shadow 100x5+1+2 \) \
		-quality 100 +swap -background "${background_frame_color}" \
		-layers merge +repage "${sshots_file}"
	post_operation
}

function window_sshot() {
	check_dir
	stype="Window"
	maim -u -f png -i "$(xdotool getactivewindow)" | convert - \
		\( +clone -background black -shadow 100x5+1+2 \) \
		-quality 100 +swap -background "${background_frame_color}" \
		-layers merge +repage "${sshots_file}"
	post_operation
}

function range_sshot() {
	check_dir
	stype="Range"
	maim -u -f png -s -t 10 | convert - \
		\( +clone -background black -shadow 100x5+1+2 \) \
		-quality 100 +swap -background "${background_frame_color}" \
		-layers merge +repage "${sshots_file}"
	post_operation
}

function delay_sshot() {
	check_dir
	if [ "$1" == "--full" ]; then
		full_sshot
	elif [ "$1" == "--window" ]; then
		window_sshot
	else
		# take full screenshot
		full_sshot
	fi
}

case "$1" in
	--full|"" ) full_sshot ;;
	--window ) window_sshot ;;
	--range ) range_sshot ;;
	--delay ) shift
		delay_sshot "$1" ;;
	--help|-h ) get_help && exit 0 ;;
	*) echo "give correct argument" && exit 1 ;;
esac

# make this work with case statements and try to get input from dmenu also
